{"version":3,"file":"component---src-templates-blog-post-js-content-file-path-content-blog-gatsby-starter-blog-index-md-a84555ad3db5e0642975.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./content/blog/gatsby-starter-blog/index.md","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Amazon from \"../../../src/components/amazon\";\nimport Hatena from \"../../../src/components/hatena\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h3: \"h3\",\n    hr: \"hr\",\n    h2: \"h2\",\n    br: \"br\",\n    ul: \"ul\",\n    li: \"li\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Gatsbyではブログも作れるので作ってみた。ただ、普通のブログのようなコメントが外部の機能を使わないといけない。静的サイトというのはあまり書き換えることがないことが前提。マニュアルをいっぱい読むのも飽きてきたので、作りながら考えることにした。\"), \"\\n\", React.createElement(_components.p, null, \"作ったのがこれ、まだちゃんと設定ができていない。\"), \"\\n\", React.createElement(Hatena, {\n    src: \"https://kyukyunyorituryo.github.io/i/\"\n  }), \"\\n\", React.createElement(_components.h3, null, \"gatsby-starter\"), \"\\n\", React.createElement(_components.p, null, \"このgatsby-starter-blogというのはマークダウンファイルを読み込んでブログの形に出力するようだ。\"), \"\\n\", React.createElement(Hatena, {\n    src: \"https://www.gatsbyjs.com/starters/gatsbyjs/gatsby-starter-blog\"\n  }), \"\\n\", React.createElement(Hatena, {\n    src: \"https://bel-itigo.com/blog-customize-20220206/\"\n  }), \"\\n\", React.createElement(_components.p, null, \"例えばハローワールドのマークダウンは「gatsby-starter-blog\\\\content\\\\blog\\\\hello-world」位置にある。２個目のファイルは「gatsby-starter-blog\\\\content\\\\blog\\\\my-second-post」と別のフォルダーに分かれている。フォルダー名がslugになりサイトのアドレスになるので日本語はやめておいたほうがよさそう。\"), \"\\n\", React.createElement(_components.p, null, \" 出力されるページはこのようだ。\"), \"\\n\", React.createElement(Hatena, {\n    src: \"https://gatsbystarterblogsource.gatsbyjs.io/\"\n  }), \"\\n\", React.createElement(_components.p, null, \"英語用のスターターなので日本語のサイトとすると少し変なところがあるので修正したい。hello-worldフォルダー内のindex.mdの最初にFront-matterというタイトル、日付、説明などを追加している。この日付で投稿の順番が整列される。\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, null, \"title: Hello World\", React.createElement(_components.br), \"\\n\", \"date: \\\"2015-05-01T22:12:03.284Z\\\"\", React.createElement(_components.br), \"\\n\", \"description: \\\"Hello World\\\"\"), \"\\n\", React.createElement(_components.p, null, \"日付の表示が英語風だったので日本語風に直した。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"トップページ：src/pages/index.js\"), \"\\n\", React.createElement(_components.li, null, \"個別ページ：src/templates/blog-post.js\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"date(formatString: \\\"MMMM DD, YYYY\\\")\"), \"\\n\", React.createElement(_components.p, null, \"May 01, 2015\"), \"\\n\", React.createElement(_components.p, null, \"date(formatString: \\\"YYYY年MM月DD日\\\")\"), \"\\n\", React.createElement(_components.p, null, \"2015年05月01日\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"     あと ＜Bio /＞の位置を下げた\"), \"\\n\", React.createElement(_components.h3, null, \"アマゾンアフィリエイトを貼る方法\"), \"\\n\", React.createElement(_components.p, null, \"説明通りにやると私の環境ではaccessKey、secretKeyをgithubで公開してしまいそうだったのでdotenvから読み込むように書き換えた。\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"require('dotenv').config();\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"        accessKey: process.env.accessKey,\", React.createElement(_components.br), \"\\n\", \"secretKey: process.env.secretKey,\"), \"\\n\", React.createElement(_components.p, null, \"使ってみた問題点、アイテムが１０を超えると処理が止まる。なのでissueを投げてみた。\"), \"\\n\", React.createElement(Hatena, {\n    src: \"https://github.com/mjun0812/gatsby-remark-amazon-link\"\n  }), \"\\n\", React.createElement(_components.p, null, \"取得するのがタイトルと表紙だけなので、著者名も取得できるように書き換えればなとは思う。コード見てみると、ライブラリ自体がタイトルと表紙しか取得してないのでライブラリ自体を書き換えないといけなさそう。\"), \"\\n\", React.createElement(Hatena, {\n    src: \"https://tech.qookie.jp/posts/use-npm-package-github-fork/\"\n  }), \"\\n\", React.createElement(Hatena, {\n    src: \"https://qiita.com/ozaki25/items/3e2cf94f29bd0edc1979\"\n  }), \"\\n\", React.createElement(_components.p, null, \"puppeterを使っているので時間がかかる。アマゾンアフィリエイトを先に処理させるようにしないと干渉する。\"), \"\\n\", React.createElement(Hatena, {\n    src: \"https://yayo1.com/blog/gatsby_blog_linkcard/\"\n  }), \"\\n\", React.createElement(_components.p, null, \"設定を入れるだけでサイトマップを自動で作ってくれる。\"), \"\\n\", React.createElement(Hatena, {\n    src: \"https://www.gatsbyjs.com/plugins/gatsby-plugin-sitemap/\"\n  }), \"\\n\", React.createElement(_components.p, null, \"SEO対策をどうするかだが、OGPの設定が文字だけになっている。\"), \"\\n\", React.createElement(Hatena, {\n    src: \"https://bel-itigo.com/how-to-use-gatsby-head-api/\"\n  }), \"\\n\", React.createElement(_components.p, null, \"簡単に作った割には、サイトパフォーマンスが高い。\"), \"\\n\", React.createElement(Hatena, {\n    src: \"https://knowledge.sakura.ad.jp/21477/\"\n  }), \"\\n\", React.createElement(Hatena, {\n    src: \"https://99nyorituryo.hatenablog.com/entry/2023/07/22/221721\"\n  }), \"\\n\", React.createElement(Hatena, {\n    src: \"https://99nyorituryo.hatenablog.com/entry/2023/07/15/004242\"\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/Users/Owner/Documents/gatsby/i/content/blog/gatsby-starter-blog/index.md\";\nimport * as React from \"react\";\nimport {Link, graphql} from \"gatsby\";\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport Share from \"../components/share\";\nconst BlogPostTemplate = ({data: {previous, next, site, mdx: post}, location, children}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`;\n  return React.createElement(Layout, {\n    location: location,\n    title: siteTitle\n  }, React.createElement(\"article\", {\n    className: \"blog-post\",\n    itemScope: true,\n    itemType: \"http://schema.org/Article\"\n  }, React.createElement(\"header\", null, React.createElement(\"h1\", {\n    itemProp: \"headline\"\n  }, post.frontmatter.title), React.createElement(\"p\", null, post.frontmatter.date)), React.createElement(\"section\", {\n    itemProp: \"articleBody\"\n  }, children), React.createElement(\"hr\"), React.createElement(Share, {\n    title: post.frontmatter.title,\n    url: `${site.siteMetadata.siteUrl}${post.fields.slug}`\n  }), React.createElement(\"footer\", null, React.createElement(Bio))), React.createElement(\"nav\", {\n    className: \"blog-post-nav\"\n  }, React.createElement(\"ul\", {\n    style: {\n      display: `flex`,\n      flexWrap: `wrap`,\n      justifyContent: `space-between`,\n      listStyle: `none`,\n      padding: 0\n    }\n  }, React.createElement(\"li\", null, previous && React.createElement(Link, {\n    to: previous.fields.slug,\n    rel: \"prev\"\n  }, \"← \", previous.frontmatter.title)), React.createElement(\"li\", null, next && React.createElement(Link, {\n    to: next.fields.slug,\n    rel: \"next\"\n  }, next.frontmatter.title, \" →\")))));\n};\nexport const Head = ({data: {mdx: post}}) => {\n  return React.createElement(Seo, {\n    title: post.frontmatter.title,\n    description: post.frontmatter.description || post.excerpt,\n    ogpimage: post.frontmatter.ogpimage\n  });\n};\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n      }\n    }\n    mdx(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      frontmatter {\n        title\n        date(formatString: \"YYYY年MM月DD日\")\n        description\n        ogpimage\n      }\n      fields{\n      slug\n      }\n    }\n    previous: mdx(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: mdx(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h3","hr","h2","br","ul","li","blockquote","_provideComponents","components","React","Hatena","src","wrapper","MDXLayout","BlogPostTemplate","_ref","data","previous","next","site","mdx","post","location","children","siteTitle","siteMetadata","_site$siteMetadata","title","Layout","className","itemScope","itemType","itemProp","frontmatter","date","Share","url","siteUrl","fields","slug","Bio","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","rel","Head","_ref2","Seo","description","excerpt","ogpimage","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}