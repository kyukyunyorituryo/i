{"version":3,"file":"component---src-templates-blog-post-js-content-file-path-content-blog-kakuyomu-index-correct-index-md-8964fddffdb47f2d738d.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./content/blog/kakuyomu index correct/index.md","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Amazon from \"../../../src/components/amazon\";\nimport Hatena from \"../../../src/components/hatena\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"　以前のカクヨムの目次取得で、あとから追加した話が最後尾になってしまうという不具合があったので修正した。原因はepisodeの内容をアドレスの番号で整列していたためだった。カクヨム各話の順番はjsonに配列で書かれているのを見落としていた。\"), \"\\n\", React.createElement(Hatena, {\n    src: \"https://99nyorituryo.hatenablog.com/entry/2023/12/07/235556\",\n    title: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"　本のIDから章の配列を取得して、章から話の配列と玉突き的に取得する。以前はエピソードIDで整列していたが、途中に追加した話は大きい数字になるので順番通りにならなかった。\\r\\ntableOfContents、TableOfContentsChapter、episodeUnions\\r\\n\\\"Work:サイト番号\\\"の.tableOfContentsで章の配列を取得する。tableOfContentsの配列にTableOfContentsChapterがあり、そこからさらに章内の話の配列がある。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">json=document.getElementById(\\\"__NEXT_DATA__\\\").text\\r\\nconst obj = JSON.parse(json);\\r\\nconst page=obj.props.pageProps.__APOLLO_STATE__\\r\\ncd=location.pathname.replace(/\\\\/+$/, \\\"\\\").split('/').pop();\\r\\ntitle=page[\\\"Work:\\\" + cd].title\\r\\nintroduction=page[\\\"Work:\\\" + cd].introduction\\r\\nauthor=page[page[\\\"Work:\\\" + cd].author.__ref].activityName\\r\\ntoc=page[\\\"Work:\\\" + cd].tableOfContents\\r\\ntocc=[]//チャプター順番\\r\\nepisode=[]\\r\\nfor (let i = 0; i &lt; toc.length; i++) {\\r\\n\\r\\ntocc[i]=page[\\\"Work:\\\" + cd].tableOfContents[i].__ref\\r\\nfor (let j = 0; j &lt; page[tocc[i]].episodeUnions.length; j++) {\\r\\n\\r\\nepisode.push(page[tocc[i]].episodeUnions[j].__ref)\\r\\n}\\r\\n}\\r\\n\\r\\nbook=[]\\r\\nfor (let i = 0; i &lt; episode.length; i++) {\\r\\n//book[i].id=page[episode[i]].id\\r\\n//book[i].title=page[episode[i]].title\\r\\n//book[i].date=page[episode[i]].publishedAt\\r\\nbook.push({ id: page[episode[i]].id, title: page[episode[i]].title, date: page[episode[i]].publishedAt })\\r\\n}\\r\\n</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"　gradleでインストーラーまで作成できれば後々楽かなとJava21までアップデートした。なぜか止まるので原因を探し中。それに伴い推奨環境をJava21に移行しようと思う。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/Users/Owner/Documents/gatsby/i/content/blog/kakuyomu index correct/index.md\";\nimport * as React from \"react\";\nimport {Link, graphql} from \"gatsby\";\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport Share from \"../components/share\";\nimport kebabCase from \"lodash/kebabCase\";\nconst BlogPostTemplate = ({data: {previous, next, site, mdx: post}, location, children}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`;\n  const tags = post.frontmatter.tags;\n  return React.createElement(Layout, {\n    location: location,\n    title: siteTitle\n  }, React.createElement(\"article\", {\n    className: \"blog-post\",\n    itemScope: true,\n    itemType: \"http://schema.org/Article\"\n  }, React.createElement(\"header\", null, React.createElement(\"h1\", {\n    itemProp: \"headline\"\n  }, post.frontmatter.title), React.createElement(\"p\", null, post.frontmatter.date, \"　\", tags && tags.length > 0 && tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${kebabCase(tag)}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  }))), React.createElement(\"section\", {\n    itemProp: \"articleBody\"\n  }, children), React.createElement(\"hr\"), React.createElement(Share, {\n    title: post.frontmatter.title,\n    url: `${site.siteMetadata.siteUrl}${post.fields.slug}`\n  }), React.createElement(\"footer\", null, React.createElement(Bio))), React.createElement(\"nav\", {\n    className: \"blog-post-nav\"\n  }, React.createElement(\"ul\", {\n    style: {\n      display: `flex`,\n      flexWrap: `wrap`,\n      justifyContent: `space-between`,\n      listStyle: `none`,\n      padding: 0\n    }\n  }, React.createElement(\"li\", null, previous && React.createElement(Link, {\n    to: previous.fields.slug,\n    rel: \"prev\"\n  }, \"← \", previous.frontmatter.title)), React.createElement(\"li\", null, next && React.createElement(Link, {\n    to: next.fields.slug,\n    rel: \"next\"\n  }, next.frontmatter.title, \" →\")))));\n};\nexport const Head = ({data: {mdx: post}}) => {\n  return React.createElement(Seo, {\n    title: post.frontmatter.title,\n    description: post.frontmatter.description || post.excerpt,\n    ogpimage: post.frontmatter.ogpimage\n  });\n};\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n      }\n    }\n    mdx(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      frontmatter {\n        title\n        date(formatString: \"YYYY年MM月DD日\")\n        description\n        ogpimage\n        tags\n      }\n      fields{\n      slug\n      }\n    }\n    previous: mdx(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: mdx(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","_provideComponents","components","React","Hatena","src","title","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","BlogPostTemplate","_ref","data","previous","next","site","mdx","post","location","children","siteTitle","siteMetadata","_site$siteMetadata","tags","frontmatter","Layout","className","itemScope","itemType","itemProp","date","length","map","tag","Link","to","kebabCase","Share","url","siteUrl","fields","slug","Bio","style","display","flexWrap","justifyContent","listStyle","padding","rel","Head","_ref2","Seo","description","excerpt","ogpimage","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}