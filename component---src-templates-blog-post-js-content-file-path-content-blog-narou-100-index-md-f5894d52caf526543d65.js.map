{"version":3,"file":"component---src-templates-blog-post-js-content-file-path-content-blog-narou-100-index-md-f5894d52caf526543d65.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./content/blog/narou100/index.md","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Amazon from \"../../../src/components/amazon\";\nimport Hatena from \"../../../src/components/hatena\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"　現状１００話未満なら正常にダウンロードする。１００より後は認識しない。２ページ目以降の目次をドラッグアンドドロップすると１００話より後もダウンロードできるが上書きされてしまう。\"), \"\\n\", React.createElement(_components.p, null, \"１００話以上ある小説の場合にページネーションが追加されて分割されるようだ。\\r\\nnovelview_pager-boxのaタグ内のクラスnovelview_pager-next　リンク先が?p=2で末尾の数字ページ番号である。\\r\\n最後のページの場合には　novelview_pager-nextのクラスがspanタグになっている。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">document.getElementsByClassName(\\\"novelview_pager-next\\\").length==0\\r\\nの場合は目次なし\\r\\ndocument.getElementsByClassName(\\\"novelview_pager-next\\\")[0].tagName=='A'\\r\\nの場合に次のページがあり\\r\\ndocument.getElementsByClassName(\\\"novelview_pager-next\\\")[0].href\\r\\nを取得する末尾に　?p=2　が追加される　\\r\\ndocument.getElementsByClassName(\\\"novelview_pager-next\\\")[0].tagName=='SPAN'\\r\\nの場合最終ページ</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"トップページ読み込み２ページ目へのリンクがある場合には２ページ目を読み込みに行く。２ページ目更新の更新情報と各話へのリンクに追加する。これを最終ページまで繰り返す。\"), \"\\n\", React.createElement(_components.p, null, \"HREF\"), \"\\n\", React.createElement(_components.p, null, \"SUB_UPDATE\"), \"\\n\", React.createElement(_components.p, null, \"CONTENT_UPDATE_LIST\"), \"\\n\", React.createElement(_components.p, null, \"サイトを読み込んで処理をするときに、\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">各ページのclass=\\\"index_box\\\"を取得して中身を連結\\r\\ndocument.getElementsByClassName(\\\"index_box\\\")[0].children</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"jsoupのdom操作がJSとだいぶ違うのでマニュアル見ながらじゃないとできない。\"), \"\\n\", React.createElement(Hatena, {\n    src: \"https://jsoup.org/cookbook/extracting-data/dom-navigation\",\n    title: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"jsoupでノードのコピー\"), \"\\n\", React.createElement(_components.p, null, \"[https://www.tabnine.com/code/java/methods/org.jsoup.nodes.Document/appendChild]\"), \"\\n\", React.createElement(Hatena, {\n    src: \"https://stackoverflow.com/questions/48671687/pagination-in-web-scraping-using-jsoup-in-java-swing\",\n    title: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"extract.txtから設定を読み込むために設定内容を考える。\"), \"\\n\", React.createElement(_components.p, null, \"ページャーの上限　PagerMax 100\\r\\n目次のクラスネーム　index .index_box:0\\r\\nリンクのクラスネーム　NEXTPAGE .novelview_pager-next\"), \"\\n\", React.createElement(_components.h3, null, \"ページネーション読み込み機能をつけてみた\"), \"\\n\", React.createElement(Hatena, {\n    src: \"https://github.com/kyukyunyorituryo/AozoraEpub3/releases/tag/v1.1.1b21Q\",\n    title: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"バグが出ても対応できる人向け web/ncode.syosetu.com/extract.txt内の\\r\\n#NEXTPAGE の#を外すとページネーションが有効化される\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/Users/Owner/Documents/gatsby/i/content/blog/narou100/index.md\";\nimport * as React from \"react\";\nimport {Link, graphql} from \"gatsby\";\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport Share from \"../components/share\";\nimport kebabCase from \"lodash/kebabCase\";\nconst BlogPostTemplate = ({data: {previous, next, site, mdx: post}, location, children}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`;\n  const tags = post.frontmatter.tags;\n  return React.createElement(Layout, {\n    location: location,\n    title: siteTitle\n  }, React.createElement(\"article\", {\n    className: \"blog-post\",\n    itemScope: true,\n    itemType: \"http://schema.org/Article\"\n  }, React.createElement(\"header\", null, React.createElement(\"h1\", {\n    itemProp: \"headline\"\n  }, post.frontmatter.title), React.createElement(\"p\", null, post.frontmatter.date, \"　\", tags && tags.length > 0 && tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${kebabCase(tag)}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  }))), React.createElement(\"section\", {\n    itemProp: \"articleBody\"\n  }, children), React.createElement(\"hr\"), React.createElement(Share, {\n    title: post.frontmatter.title,\n    url: `${site.siteMetadata.siteUrl}${post.fields.slug}`\n  }), React.createElement(\"footer\", null, React.createElement(Bio))), React.createElement(\"nav\", {\n    className: \"blog-post-nav\"\n  }, React.createElement(\"ul\", {\n    style: {\n      display: `flex`,\n      flexWrap: `wrap`,\n      justifyContent: `space-between`,\n      listStyle: `none`,\n      padding: 0\n    }\n  }, React.createElement(\"li\", null, previous && React.createElement(Link, {\n    to: previous.fields.slug,\n    rel: \"prev\"\n  }, \"← \", previous.frontmatter.title)), React.createElement(\"li\", null, next && React.createElement(Link, {\n    to: next.fields.slug,\n    rel: \"next\"\n  }, next.frontmatter.title, \" →\")))));\n};\nexport const Head = ({data: {mdx: post}}) => {\n  return React.createElement(Seo, {\n    title: post.frontmatter.title,\n    description: post.frontmatter.description || post.excerpt,\n    ogpimage: post.frontmatter.ogpimage\n  });\n};\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n      }\n    }\n    mdx(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      frontmatter {\n        title\n        date(formatString: \"YYYY年MM月DD日\")\n        description\n        ogpimage\n        tags\n      }\n      fields{\n      slug\n      }\n    }\n    previous: mdx(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: mdx(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","h3","_provideComponents","components","React","dangerouslySetInnerHTML","__html","Hatena","src","title","wrapper","MDXLayout","BlogPostTemplate","_ref","data","previous","next","site","mdx","post","location","children","siteTitle","siteMetadata","_site$siteMetadata","tags","frontmatter","Layout","className","itemScope","itemType","itemProp","date","length","map","tag","Link","to","kebabCase","Share","url","siteUrl","fields","slug","Bio","style","display","flexWrap","justifyContent","listStyle","padding","rel","Head","_ref2","Seo","description","excerpt","ogpimage","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}